@import
  'utils',
  'aspect-ratios',
  'colors',
  'defaults',
  'definitions',
  'functions',
  'grid',
  'spacing';

//
// Add additional class definitions
//
$class-definitions: map-merge($class-definitions, $additional-class-definitions);

//
// Add additional classes to responsive classes
//
@each $name in $additional-responsive-classes {
  $responsive-classes: append($responsive-classes, $name)
};

//
// Add spacing class definitions
//
$class-definitions: map-merge($class-definitions, $spacing-definitions);

//
// If dynamic spacing is enabled, add spacing class names to $responsive-classe
//
@if $dynamic-spacing {
  @each $name, $definition in $spacing-definitions {
    $responsive-classes: append($responsive-classes, $name)
  };
}

//
// Add grid class definitions
//
$class-definitions: map-merge($class-definitions, $grid-definitions);

//
// If dynamic grid is enabled, add grid class names to $responsive-classe
//
@if $dynamic-grid {
  @each $name, $definition in $grid-definitions {
    $responsive-classes: append($responsive-classes, $name)
  };
}

//
// Add color class definitions
//
$class-definitions: map-merge($class-definitions, $color-definitions);

//
// Generate a $dynamic-class-definitions map from the $responsive classes list.
//
$dynamic-class-definitions: ();
@each $class-name in $responsive-classes {
  @if map-has-key($class-definitions, $class-name) {
    $dynamic-class-definitions: map-merge($dynamic-class-definitions, (
      $class-name: map-get($class-definitions, $class-name)
    ));
  }
}

//
// Generate a class for every class definition.
//
@each $name, $definition in $class-definitions {
  .#{$name} {
    @each $property, $value in $definition {
      #{$property}: $value;
    }
  }
}

//
// Generate a media query for each breakpoint.
//
$breakpoint-queries: ();
@each $name, $size in $breakpoints {
  $breakpoint-queries: map-merge($breakpoint-queries, (
    '#{$name}': 'min-width: #{$size}'
  ));
}

//
// Generate a class at every breakpoint for each class included in the
// $responsive-classes list.
//
@each $breakpoint, $query in $breakpoint-queries {
  @media (#{$query}) {
    @each $name, $definition in $dynamic-class-definitions {
      .#{$breakpoint}\:#{$name} {
        @each $property, $value in $definition {
          #{$property}: #{$value};
        }
      }
    }
  }
}
